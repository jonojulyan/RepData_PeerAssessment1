mat1<- makeCacheMatrix(matrix(1:4,nrow = 2 , ncol = 2))
mat1$get()
cacheSolve(mat1)
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
cacheSolve(mat1)
cacheSolve(mat1)
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
cacheSolve(mat1)
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
cacheSolve(mat1)
cacheSolve(mat1)
mat1
mat1$getInv()
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
cacheSolve(mat1)
mat1$getInv()
mat1$get()
mat1$getInv()
mat1$setInv(cacheSolve(mat1))
mat1$getInv()
View(cacheSolve)
View(cacheSolve)
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
mat1<- makeCacheMatrix(matrix(1:4,nrow = 2 , ncol = 2))
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
mat1<- makeCacheMatrix(matrix(1:4,nrow = 2 , ncol = 2))
cacheSolve(mat1)
mat1$getInv()
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
mat1<- makeCacheMatrix(matrix(1:4,nrow = 2 , ncol = 2))
cacheSolve(mat1)
mat1$getInv()
cacheSolve(mat1)
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
cacheSolve(mat1)
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
cacheSolve(mat1)
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
cacheSolve(mat1)
error("not a square matrix")
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
mat<-matrix(1:6,nrow = 2,ncol = 3)
mat
solve(matrix(data, nrow = rows, ncol = cols))
solve(mat)
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
cacheSolve(mat1)
mat1$getInv()
cacheSolve(mat1)
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/Functions/assignment2.R')
cacheSolve(mat1)
cacheSolve(mat1,rm.na=FALSE)
source('C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 2/ProgrammingAssignment2/cachematrix.R')
cacheSolve(mat1)
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
data<- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data.csv")
data <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data.csv")
data[,34]
View(data)
View(data)
subset(data,data$VAL == 24)
temp<-subset(data,data$VAL == 24)
nrow(temp)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data2.xlsx")
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
library("xlsx")
install.packages("xlsx")
library(xlsx)
library(xlsx)
dat<- read.xlsx("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data2.xlsx",skip = 17,nrows = 5)
dat<- read.xlsx("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data2.xlsx", sheetIndex = 1,skip = 17,nrows = 5)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data2.xlsx",mode = 'wb')
dat<- read.xlsx("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data2.xlsx", sheetIndex = 1,skip = 17,nrows = 5)
data
dat<- read.xlsx("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data2.xlsx", sheetIndex = 1, rows = 18:23, cols=7:15)
View(dat)
View(dat)
dat<- read.xlsx("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data2.xlsx", sheetIndex = 1, rows = 18:23, cols=7:15, header = TRUE)
dat<- read.xlsx("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data2.xlsx", sheetIndex = 1, rows = c(18:23), cols=c(7:15), header = TRUE)
dat<- read.xlsx("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data2.xlsx", sheetIndex = 1, rowIndex = c(18:23), colIndex = c(7:15), header = TRUE)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data3.xml")
install.packages("XML")
library(XML)
xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",useInternalNodes = TRUE)
xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
doc<- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",useInternalNodes = TRUE)
doc<- xmlTreeParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal=TRUE)
rootNode <- xmlRoot(doc)
rootNode
xpathSApply(rootNode,"//zipcode",xmlValue)
d<- xpathSApply(rootNode,"//zipcode",xmlValue)
d
d[names(d)=="21231"]
d["21231"]
d<- table(xpathSApply(rootNode,"//zipcode",xmlValue))
d
d[names(d)=="21231"]
d[names(d)==21231]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data3.xml")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data4.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data3.xml")
fread()
install.packages("data.table")
library(data.table)
DT<- fread(file = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
DT<- fread(file = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/data4.csv")
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
mean(DT$pwgtp15,by=DT$SEX)
sapply(split(DT$pwgtp15,DT$SEX),mean)
tapply(DT$pwgtp15,DT$SEX,mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
library(httr)
myapp = GET("https://api.github.com/users/jtleek/repos")
View(myapp)
json1 = content(myapp)
View(json1)
View(json1)
json2 = jsonlite::fromJSON(toJson(json1))
json2 = jsonlite::fromJSON(toJSON(json1))
library(jsonlite)
json2 = jsonlite::fromJSON(toJSON(json1))
View(json2)
View(json2)
View(json2)
json2[1,1:4]
json2[json2$name==datasharing,1:4]
subset(json2,json2$name==datasharing, select = created_at)
subset(json2,json2$name=='datasharing', select = created_at)
acs = read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/getdata_data_ss06pid.csv")
library(rmysql)
install.packages("RMySQL")
library(rmysql)
library(RMySQL)
sqldf("select * from acs")
install.packages("sqldf")
library(sqldf)
sqldf("select * from acs")
sqldf("select pwgtp1 from acs where AGEP \lt< 50")
sqldf("select pwgtp1 from acs where AGEP< 50")
library(sqldf)
sqldf("select * from acs")
acs = read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/getdata_data_ss06pid.csv")
sqldf("select * from acs")
sqldf("select pwgtp1 from acs where AGEP< 50")
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
unique(acs$AGEP)
sqldf("select distinct pwgtp1 from acs")
sqldf("select AGEP where unique from acs")
sqldf("select unique AGEP from acs")
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode
htmlCode[10]
htmlCode[c(10,20,30,100)]
htmlCode[20]
htmlCode[30]
htmlCode[100]
htmlCode[c(10,20,30,100)]
nchar(htmlCode[c(10,20,30,100)])
htmlCode = readLines(url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"))
htmlCode[4]
htmlCode[,4]
htmlCode[4,]
htmlCode
htmlCode = readLines(url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"))
htmlCode
htmlCode = readLines(url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"))
htmlCode = readLines(url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"))
htmlCode
htmlCode[4]
htmlCode[1]
htmlCode[2]
htmlCode[3]
htmlCode[5]
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/quizw2")
htmlCode[5]
htmlCode
htmlCode[5:]
htmlCode[5:end]
htmlCode[5:length(htmlCode)]
substr(htmlCode[5:end],4,7)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quizdata.csv")
df = read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quizdata.csv")
df$ACR
df[df$ACR==3]
df(df$ACR==3)
df[(df$ACR==3)]
df[(df$ACR==3),]
df[(df$ACR>2),]
df[(df$ACR>2& df$AGS>5),]
subset(df,df$ACR>2& df$AGS>5,rm.na)
subset(df,df$ACR>2& df$AGS>5,)
subset(df,df$ACR==3& df$AGS==6,)
agricultureLogical = (df$ACR==3& df$AGS==6)
agricultureLogical = (df$ACR==3 & df$AGS==6)
agricultureLogical[TRUE]
agricultureLogical[1]
agricultureLogical["TRUE"]
agricultureLogical[(TRUE)]
all(agricultureLogical[(TRUE)],rm.na =TRUE)
all(agricultureLogical,rm.na =TRUE)
?which
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
?jpeg
jpeg("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
download.file("",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg")
jpeg("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg")
instpic <- jpeg("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg")
instpic <- jpeg("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg", native = TRUE)
?readJPEG
istrpic <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
istrpic <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
istrpic <- readJPEG("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg", native = TRUE)
istrpic <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg")
istrpic <- readJPEG(url("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"), native = TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg",mode = "wb")
istrpic <- readJPEG("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg", native = TRUE)
istrpic[c(30,85)]
istrpic[c(30,80)]
library(jpeg)
im <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
im <- readJPEG("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg")
im <- readJPEG("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg",native = TRUE)
?quantile
q<- quantile(im)
q
quantile(as.vecter(im), probs = seq(0,1,0.01))
as.vector(im)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg",mode = "wb")
im <- readJPEG("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/quiz.jpg",native = TRUE)
q<- quantile(im)
q
quantile(as.vecter(im), probs = seq(0,1,0.01))
as.vector(im)
v<- as.vector(im)
quantile(v, probs = seq(0,1,0.01))
quantile(im, probs = seq(0,1,0.01))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/GDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/educational.csv")
gdp <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/GDP.csv")
ed <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/educational.csv")
View(ed)
ed$CountryCode
View(gdp)
View(gdp)
m <- merge(gdp,ed,by.x = "X", by.y = "CountryCode")
View(m)
?merge
m <- merge(gdp,ed,by.x = "X", by.y = "CountryCode",all=TRUE)
m <- merge(gdp,ed,by.x = "X", by.y = "CountryCode")
m[13]
gdp
gdp <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/GDP.csv",skip = 7)
gdp
View(gdp)
View(gdp)
gdp <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/GDP.csv",skip = 5)
View(gdp)
View(gdp)
?read.csv
gdp <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/GDP.csv",skip = 9)
View(gdp)
gdp <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/GDP.csv",skip = 4)
View(gdp)
m <- merge(gdp,ed,by.x = "X", by.y = "CountryCode")
m[order("X.1"),]
View(m)
View(m)
View(ed)
View(ed)
m[order(-X.1),]
m[order(-"X.1"),]
View(m)
View(m)
View(gdp)
View(gdp)
gdp <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 3/GDP.csv",skip = 4,nrows = 231)
View(gdp)
View(gdp)
m <- merge(gdp,ed,by.x = "X", by.y = "CountryCode")
m <- merge(gdp,ed,by.x = "X", by.y = "CountryCode",rm.na = TRUE)
m <- merge(gdp,ed,by.x = "X", by.y = "CountryCode")
subset(m,!.is.na(m$X.1)
)
subset(m,!is.na(m$X.1)
)
s<-subset(m,!is.na(m$X.1))
View(s)
s[order(X.1),]
s[order("X.1"),]
View(s)
subset(s,s$Income.Group == "High income: OECD", select = X.1)
mean(subset(s,s$Income.Group == "High income: OECD", select = X.1))
class(subset(s,s$Income.Group == "High income: OECD", select = X.1))
mean(subset(s,s$Income.Group == "High income: OECD", select = X.1)[1])
mean(subset(s,s$Income.Group == "High income: OECD", select = X.1)[1,])
mean(subset(s,s$Income.Group == "High income: OECD", select = X.1)[,1])
mean(subset(s,s$Income.Group == "High income: nonOECD", select = X.1)[,1])
quantile(s)
quantile(s$X.1)
quantile(s$X.1, sep = 5)
quantile(s$X.1, sep = 6)
quantile(s$X.1, sep = 100)
quantile(s$X.1, s)
quantile(s$X.1, probs = seq(0, 1, 0.25))
quantile(s$X.1, probs = seq(0, 1, 0.2))
quant<-quantile(s$X.1, probs = seq(0, 1, 0.2))
s$groupSlice <- cut(s$X.1, breaks = quant)
table(s$Income.Group, s$groupSlice)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/IdahoHousing")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/IdahoHousing.csv")
df <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/IdahoHousing.csv")
View(df)
View(df)
strsplit(df,"wgtp")
splitnames <- strsplit(names(df),"wgtp")
splitnames[123]
splitnames[[123]
]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/GDP.csv")
df <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/GDP.csv")
df <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/GDP.csv", skip = 4, nrows = 231)
df$X.4 <- sub(",","",df$X.4)
df$X.4 <- sub(",","",df$X.4)
mean(df$X.4)
class(df$X.4)
df$X.4<-as.integer(df$X.4)
mean(df$X.4)
mean(df$X.4,rm.na=TRUE)
subset(df,!is.na(df$X.4),select = X.4)
mean(subset(df,!is.na(df$X.4),select = X.4)[,1])
df <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/GDP.csv", skip = 4, nrows = 190)
df$X.4 <- sub(","," ",df$X.4)
df$X.4 <- sub(","," ",df$X.4)
df$X.4<-as.integer(df$X.4)
df$X.4<-as.numeric(df$X.4)
df <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/GDP.csv", skip = 4, nrows = 190)
df$X.4 <- sub(","," ",df$X.4)
df$X.4 <- sub(","," ",df$X.4)
df$X.4<-as.numeric(df$X.4)
df <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/GDP.csv", skip = 4, nrows = 190)
df$X.4 <- sub(",","",df$X.4)
df$X.4 <- sub(",","",df$X.4)
df$X.4<-as.numeric(df$X.4)
mean(subset(df,!is.na(df$X.4),select = X.4)[,1])
grep("*United",countryNames), 2
grep("United$",countryNames), 3
grep("*United",countryNames), 5
grep("*United",X.3), 2
grep("*United",X.3), 3
grep("^United",df$X.4), 3
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/GDP2.csv")
df <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/GDP2.csv")
df <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/GDP2.csv", skip = 4, nrows = 190)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",destfile = "C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/ed.csv")
df <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/ed.csv")
df <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/GDP2.csv", skip = 4, nrows = 190)
ed <- read.csv("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 3/Week 4/ed.csv")
m<- merge(df,ed,by.x = df$X,by.y = ed$CountryCode)
m<- merge(df,ed,by.x = X,by.y = CountryCode)
m<- merge(df,ed,by.x = "X",by.y = "CountryCode")
View(m)
m$Special.Notes
s<- subset(m,!is.na(m$Special.Notes))
s$Special.Notes
s<- subset(m,length(m$Special.Notes)>0)
s<- subset(m,length(m$Special.Notes)>1)
class(m$Special.Notes)
s<- subset(m,m$Special.Notes!="")
s<- subset(m,m$Special.Notes!="Fiscal year end: June$")
s<- subset(m,m$Special.Notes="Fiscal year end: June$")
s<- subset(m,m$Special.Notes=="Fiscal year end: June$")
s<- subset(m,m$Special.Notes=="Fiscal year end: June 30")
s<- subset(m,str_detect(m$Special.Notes,"Fiscal year end: June 30"))
?str_detect
install.packages("stringi")
library("stringi")
s<- subset(m,str_detect(m$Special.Notes,"Fiscal year end: June 30"))
grep("Fiscal year end: June",m$Special.Notes)
m[grep("Fiscal year end: June",m$Special.Notes),]
grep("Fiscal year end: June",m$Special.Notes)
length(grep("Fiscal year end: June",m$Special.Notes))
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
amzn[,0]
grep("2012",amzn[,0])
grep("2012-",as.amzn[,0])
as.character(amzn[,0])
grep("2012-[0-9]{2}-[0-9]{2}", amzn[,0])
grep("2012-[0-9]{2}-[0-9]{2}", amzn[,0], value=F)
amzn[,0]
class(amzn[,0])
amzn[,0]$xts
zoo(amzn[,0])
zoo(amzn)
xts(amzn)
xts(amzn[,0])
class(xts(amzn[,0]))
grep("2012-[0-9]{2}-[0-9]{2}", xts(amzn[,0]), value=F)
grep("2012-[0-9]{2}-[0-9]{2}", xts(amzn[,0]))
grep("2012", xts(amzn[,0]))
grep("2012", zoo(amzn[,0]))
class(amzn[1,0])
typeof(amzn[1,0])
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
subset(amzn,amzn>"2011-12-31")
subset(amzn,amzn[,0]>"2011-12-31")
subset(amzn,amzn[0,]>"2011-12-31")
subset(amzn,amzn[,0]>"2011-12-31")
grep("2012",amzn[,0])
as.character.Date(amzn[,0])
as.character(amzn[,0])
amzn["2012",]
length(amzn["2012",])
length(amzn[2012,])
length(amzn["2012-",])
amzn["2012-",]
temp<- amzn["2012-",]
View(temp)
length(temp)
length(temp[,1])
length(temp["Monday",])
temp["Monday",]
class(temp)
?xts
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
setwd("C:/Users/Jonathan.Julyan/Desktop/DATA Science MOOC/Course 5/RepData_PeerAssessment1")
averageStepsPerInterval[200]
averageStepsPerInterval["200"]
data <- read.csv(unz("activity.zip", "activity.csv"))
totalSteps <- tapply(data$steps, data$date, sum, na.rm = TRUE)
#Histogram
hist(totalSteps,col = "red", main = "Total number of steps taken each day", xlab = "Total Steps", ylab = "Number of Days")
#Mean
mean(totalSteps)
#Median
median(totalSteps)
averageStepsPerInterval <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
plot(x = names(averageStepsPerInterval), y = averageStepsPerInterval, type="l", ylab="Average Steps", xlab="Interval", main = "Average Steps taken in each interval")
#Max interval
names(averageStepsPerInterval)[which.max(averageStepsPerInterval)]
sum(complete.cases(data)==FALSE)
#Fill dataset
data2 <- data
averageStepsPerInterval[200]
averageStepsPerInterval["200"]
averageStepsPerInterval[data2[,3]]
averageStepsPerInterval[data2[1,3]]
data2[1,3]
data2[2,3]
averageStepsPerInterval[data2[2,3]]
averageStepsPerInterval[as.character(data2[2,3])]
averageStepsPerInterval[as.character(data2[!complete.cases(data),3])]
data2[,3]
data2[!complete.cases(data),]
data2[!complete.cases(data),1] <- averageStepsPerInterval[as.character(data2[!complete.cases(data),3])]
View(data2)
weekdays(data2[,2])
?weekdays
weekdays(as.POSIXct(data2[,2]))
day <- weekdays(as.POSIXct(data2[,2]))
grep("Monday",day)
?grep
grepl("Monday",day)
grepl(c("Saturday","Sunday"),day)
grepl("Saturday",day)|grepl("Sunday",day)
test<-grepl("Saturday",day)|grepl("Sunday",day)
test
view(test)
!grepl("Saturday",day)&!grepl("Sunday",day)
weekday <- !grepl("Saturday",day)&!grepl("Sunday",day)
weekend <- grepl("Saturday",day)|grepl("Sunday",day)
data2 <- cbind(data2,weekday,weekend)
View(data2)
subset(data2,data2$weekday==TRUE &data2$weekend==TRUE)
subset(data2,data2$weekday==TRUE &data2$weekend==FALSE)
subset(data2,data2$weekday==FALSE &data2$weekend==FALSE)
subset(data2,data2$weekday==FALSE &data2$weekend==TRUE)
data2[data2$weekday==TRUE,]
